{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///src/components/CADViewerCanvas.vue","webpack:///./src/App.vue","webpack:///./src/components/CADViewerCanvas.vue","webpack:///./src/components/CADViewerCanvas.vue?5e54","webpack:///./src/components/CADViewerCanvas.vue?af34","webpack:///src/App.vue","webpack:///./src/App.vue?4c4f","webpack:///./src/App.vue?3746","webpack:///./src/main.js","webpack:///./src/components/CADViewerCanvas.vue?bbec","webpack:///./src/App.vue?b56b"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","textLayer1","render","_vm","this","_c","_self","attrs","ref","ServerBackEndUrl","ServerLocation","ServerUrl","FileName","staticRenderFns","_m","staticClass","cvjs_OnLoadEnd","cadviewer","cvjs_OnLoadEndRedlines","cvjs_graphicalObjectOnChange","type","graphicalObject","spaceID","console","myobject","cvjs_saveStickyNotesRedlinesUser","cvjs_loadStickyNotesRedlinesUser","my_own_clickmenu1","id","cvjs_idObjectClicked","my_own_clickmenu2","cvjs_popupTitleClick","roomid","cvjs_mousedown","handle","entity","cvjs_click","selected_handles","current_selected_handle","cvjs_dblclick","cvjs_mouseout","cvjs_mouseover","cvjs_mouseleave","cvjs_mouseenter","cvjs_graphicalObjectCreated","cvjs_ObjectSelected","rmid","cvjs_measurementCallback","cvjs_CalibrateMeasurementCallback","cvjs_Url_callback","cvjs_loadSpaceImage_UserConfiguration","cvjs_NoObjectSelected","cvjs_SVGfileObjectClicked","cvjs_SVGfileObjectMouseEnter","cvjs_SVGfileObjectMouseLeave","cvjs_SVGfileObjectMouseMove","cvjs_ParseDisplayDataMaps","cvjs_QuickCountCallback","cvjs_OnHyperlinkClick","cvjs_setUpStickyNotesRedlines","custom_host_parser_PopUpMenu","cvjs_customHostParser","drawPathsGeneric","cvjs_callbackForModalDisplay","cvjs_populateMyCustomPopUpBody","cvjs_customModalPopUpBody","cvjs_NoObjectSelectedStickyNotes","cvjs_NoObjectSelectedHyperlinks","cvjs_ObjectSelectedHyperlink","cvjs_ObjectSelectedStickyNotes","created","eventBus","props","msg","mounted","fill","stroke","my_cvjsPopUpBody","methods","onResize","clearTextLayer","component","components","Vue","config","productionTip","h","App","$mount"],"mappings":"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7B,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAET,SAASC,KAIM,QAEfC,mBAEAC,6BAEA,wBAIAA,0DAGAtD,mDAGAM,wCAGAiD,OACAC,WACAhE,wBACAC,sBACAC,iBACAC,iBAGA8D,mBAEA5E,gDAEAyB,uBAEA,4BACA,sBACA,iBACA,gBAGAN,uBAEAA,6CAGAA,2EAGAA,+CACAA,6DACAA,uDACAA,oDACAA,yDACAA,kEACAA,kDACAA,sEACAA,sDACAA,0DACAA,6DACAA,6DACAA,4DACAA,0DACAA,wDACAA,sDACAA,8DACAA,6DACAA,sDACAA,iDACAA,6DACAA,+DACAA,0DACAA,iEACAA,gEACAA,6DACAA,+DACAA,iEACAA,iEACAA,kDACAA,kDACAA,qDACAA,+CACAA,2CACAA,8CACAA,8CACAA,+CACAA,gDACAA,gDACAA,4DAQAA,0BAGAA,0CACAA,kCAIAA,6IAGAA,4CAOAA,gDAIAA,mHAcAA,wEASA,OACA0D,eACA,mBACAC,cACA,mBACA,2BAGA,GACAD,eACA,qBACAC,iBACA,oBAGA,GACAD,eACA,qBACAC,iBACA,oBAQA,4GACAC,oHACAA,4GAQA5D,kFAKAA,2jCAOAA,mCAQAA,yGACAA,8GACAA,4FACAA,sHAGAA,kDAGAA,yDACAA,4DAEAA,sDACAA,wDAKAA,yDAKAA,oCAGAA,6CAMAzC,mBACAsG,SACAC,YACAxD,sBAEAN,6CAGA+D,iBACA/E,4BGpjByV,M,yBCQrVgF,GAAY,gBACd,GACA,EACA,GACA,EACA,KACA,WACA,MAIa,GAAAA,G,QCgBA,IACfzG,WACApC,OACA,OACAqE,4GACAC,wGACAC,8FACAC,8FAGAsE,YAGA,2BChD8T,MCQ1T,I,UAAY,gBACd,GACAhF,EACAW,GACA,EACA,KACA,KACA,OAIa,M,QCGfsE,OAAIC,OAAOC,eAAgB,EAEpB,MAAMd,GAAW,IAAIY,OAGlB,IAAIA,OAAI,CAChBjF,OAAQoF,GAAKA,EAAEC,MACdC,OAAO,S,kCC7BV,W,kCCAA","file":"js/app.5a923ebe.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <div class=\"cadviewerCanvasTest01\">\n<!--    <h1>{{ msg }}</h1>  -->\n    <div id=\"floorPlan\"></div>\n    \n  </div>\n</template>\n\n\n<script>\n\nimport jQuery from 'jquery';\nimport cadviewer from 'cadviewer';\n\nimport {eventBus} from \"../main.js\";\n\nvar textLayer1; \n\nvar  selected_handles = [];\nvar  handle_selector = false;\nvar  current_selected_handle = \"\";\n\n\n// We should to define all the CADViewer methods in which we are getting information return from CADViewer\n// THEY CAN BE PLACEHOLDERS ONLY \n\n\n//export function cvjs_OnLoadEnd(){\n\nfunction cvjs_OnLoadEnd(){\n\t// generic callback method, called when the drawing is loaded\n\t// here you fill in your stuff, call DB, set up arrays, etc..\n\t// this method MUST be retained as a dummy method! - if not implemeted -\n\n\tcadviewer.cvjs_resetZoomPan(\"floorPlan\");\n\n\tvar user_name = \"Bob Smith\";\n\tvar user_id = \"user_1\";\n\n\t// set a value for redlines\n\tcadviewer.cvjs_setCurrentStickyNoteValues_NameUserId(user_name, user_id );\n\tcadviewer.cvjs_setCurrentRedlineValues_NameUserid(user_name, user_id);\n\t// cadviewer.cvjs_dragBackgroundToFront_SVG(\"floorPlan\");\t\t\t\t\t\n\t//cvjs_initZeroWidthHandling(\"floorPlan\", 1.0);\t\t\t\n\n\ttextLayer1 = cadviewer.cvjs_clearLayer(textLayer1);\n\t\n\n\tcadviewer.cvjs_LayerOff(\"EC1 Space Names\");\n\tcadviewer.cvjs_LayerOff(\"EC1 Space Status Descs\");\n\tcadviewer.cvjs_LayerOff(\"EC1 Space Project\");\n\tcadviewer.cvjs_LayerOff(\"EC1 Space Function Descs\");\n\tcadviewer.cvjs_LayerOff(\"EC1 Space Type Descs\");\n\tcadviewer.cvjs_LayerOff(\"EC1 Tenant Names\");\n\tcadviewer.cvjs_LayerOff(\"EC1 UDA Design Capacity\");\n\tcadviewer.cvjs_LayerOff(\"EC1 UDA Is Secured\");\n\n}\n\nfunction cvjs_OnLoadEndRedlines(){\n\t// generic callback method, called when the redline is loaded\n\t// here you fill in your stuff, hide specific users and lock specific users\n\t// this method MUST be retained as a dummy method! - if not implemeted -\n\n\t// I am hiding users added to the hide user list\n\tcadviewer.cvjs_hideAllRedlines_HiddenUsersList();\n\n\t// I am freezing users added to the lock user list\n\tcadviewer.cvjs_lockAllRedlines_LockedUsersList();\n}\n\n// Callback Method on Creation and Delete \n//export function cvjs_graphicalObjectOnChange(type, graphicalObject, spaceID){\nfunction cvjs_graphicalObjectOnChange(type, graphicalObject, spaceID){\n\n    try{\n        var myobject;\n        // do something with the graphics object created! \n    //\twindow.alert(\"CALLBACK: cvjs_graphicalObjectOnChange: \"+type+\" \"+graphicalObject+\" \"+spaceID+\" indexSpace: \"+graphicalObject.toLowerCase().indexOf(\"space\"));\n        console.log(\"CALLBACK: cvjs_graphicalObjectOnChange: \"+type+\" \"+graphicalObject+\" \"+spaceID+\" indexSpace: \"+graphicalObject.toLowerCase().indexOf(\"space\"));\n\n        if (type == 'Create' && graphicalObject.toLowerCase().indexOf(\"space\")>-1 && graphicalObject.toLowerCase().indexOf(\"circle\")==-1){\n                \n            /**\n             * Return a JSON structure of all content of a given ID: <br>\n            * \tvar jsonStructure =  \t{\t\"path\":   path, <br>\n            *\t\t\t\t\t\t\t\t\"tags\": tags, <br>\n            *\t\t\t\t\t\t\t\t\"node\": node, <br>\n            *\t\t\t\t\t\t\t\t\"outerhtml\": outerHTML, <br>\n            *\t\t\t\t\t\t\t\t\"occupancy\": occupancy, <br>\n            *\t\t\t\t\t\t\t\t\"name\": name, <br>\n            *\t\t\t\t\t\t\t\t\"type\": type, <br>\n            *\t\t\t\t\t\t\t\t\"id\": id, <br>\n            *\t\t\t\t\t\t\t\t\"defaultcolor\": defaultcolor, <br>\n            *\t\t\t\t\t\t\t\t\"layer\": layer, <br>\n            *\t\t\t\t\t\t\t\t\"group\": group, <br>\n            *\t\t\t\t\t\t\t\t\"linked\": linked, <br>\n            *\t\t\t\t\t\t\t\t\"attributes\": attributes, <br>\n            *\t\t\t\t\t\t\t\t\"attributeStatus\": attributeStatus, <br>\n            *\t\t\t\t\t\t\t\t\"displaySpaceObjects\": displaySpaceObjects, <br>\n            *\t\t\t\t\t\t\t\t\"translate_x\": translate_x, <br>\n            *\t\t\t\t\t\t\t\t\"translate_y\": translate_y, <br>\n            *\t\t\t\t\t\t\t\t\"scale_x\": scale_x ,<br>\n            *\t\t\t\t\t\t\t\t\"scale_y\": scale_y ,<br>\n            *\t\t\t\t\t\t\t\t\"rotate\": rotate, <br>\n            *\t\t\t\t\t\t\t\t\"transform\": transform} <br>\n            * @param {string} spaceID - Id of the Space Object to return\n            * @return {Object} jsonSpaceObject - Object with the entire space objects content\n            */\n\n            myobject = cadviewer.cvjs_returnSpaceObjectID(spaceID);\n            // I can save this object into my database, and then use command \n            // cvjs_setSpaceObjectDirect(jsonSpaceObject) \n            // when I am recreating the content of the drawing at load\n            // for the fun of it, display the SVG geometry of the space:\t\t\t\n            console.log(\"This is the SVG: \"+myobject.outerhtml)\n        }\n\n\n        if (type == 'Delete' && graphicalObject.toLowerCase().indexOf(\"space\")>-1 ){\n            // remove this entry from my DB\n\n            window.alert(\"We have deleted: \"+spaceID)\n        }\n\n\n        if (type == 'Move' && graphicalObject.toLowerCase().indexOf(\"space\")>-1 ){\n            // remove this entry from my DB\n\n            console.log(\"This object has been moved: \"+spaceID)\t\t\n            myobject = cadviewer.cvjs_returnSpaceObjectID(spaceID);\n\n        }\n    }\n    catch(err){\n        console.log(\"cvjs_graphicalObjectOnChange: \"+err)\n    }\n\n\n}\n\n\nfunction cvjs_saveStickyNotesRedlinesUser(){\n\n// there are two modes, user handling of redlines\n// alternatively use the build in redline file manager\n\ncadviewer.cvjs_openRedlineSaveModal(\"floorPlan\");\n\n// custom method startMethodRed to set the name and location of redline to save\n// see implementation below\n//startMethodRed();\n// API call to save stickynotes and redlines\n//cvjs_saveStickyNotesRedlines(\"floorPlan\");\n}\n\n\n// This method is linked to the load redline icon in the imagemap\nfunction cvjs_loadStickyNotesRedlinesUser(){\n\n\ncadviewer.cvjs_openRedlineLoadModal(\"floorPlan\");\n\n// first the drawing needs to be cleared of stickynotes and redlines\n//cvjs_deleteAllStickyNotes();\n//cvjs_deleteAllRedlines();\n\n// custom method startMethodRed to set the name and location of redline to load\n// see implementation below\n// startMethodRed();\n\n// API call to load stickynotes and redlines\n//cvjs_loadStickyNotesRedlines(\"floorPlan\");\n}\n\n// Here we are writing a basic function that will be used in the PopUpMenu\n// this is template on all the good stuff users can add\nfunction my_own_clickmenu1(){\nvar id = cadviewer.cvjs_idObjectClicked();\n//\t\tvar node = cvjs_NodeObjectClicked();\nwindow.alert(\"Custom menu item 1: Here developers can implement their own methods, the look and feel of the menu is controlled in the settings.  Clicked object ID is: \"+id);\n}\n\n// Here we are writing a basic function that will be used in the PopUpMenu\n// this is template on all the good stuff users can add\nfunction my_own_clickmenu2(){\nvar id = cadviewer.cvjs_idObjectClicked();\n//var node = cvjs_NodeObjectClicked();\n\nwindow.alert(\"Custom menu item 2: Here developers can implement their own methods, the look and feel of the menu is controlled in the settings. Clicked object ID is: \"+id);\n//window.alert(\"Custom menu item 2: Clicked object Node is: \"+node);\n}\n\nfunction cvjs_popupTitleClick(roomid){\n\twindow.alert(\"we have clicked \"+roomid);\t\n}\n   \n\n// HANDLING OF MOUSE OPERATION\n\n\n// ENABLE ALL API EVENT HANDLES FOR AUTOCAD Handles\nfunction cvjs_mousedown(id, handle, entity){\n\n}\n\nfunction cvjs_click(id, handle, entity){\n\n\n\ttry{\n\t\tconsole.log(\"click \"+id+\"  \"+handle);\n\t\t// if we click on an object, then we add to the handle list\n\t\tif (id!=\"dragcanvas\")\n\t\t\tif (handle_selector){\n\t\t\t\tselected_handles.push({id,handle});\n\t\t\t\tcurrent_selected_handle = handle;\n\t\t\t}\n\n\t\t// tell to update the Scroll bar \n\t\t//vqUpdateScrollbar(id, handle);\n\t\t// window.alert(\"We have clicked an entity: \"+entity.substring(4)+\"\\r\\nThe AutoCAD Handle id: \"+handle+\"\\r\\nThe svg id is: \"+id+\"\\r\\nHighlight SQL pane entry\");\n\t}\n\tcatch(err){\n\t\tconsole.log(\"click: \"+err);\n\t}\n\n}\n\nfunction cvjs_dblclick(id, handle, entity){\n\nconsole.log(\"mysql dblclick \"+id+\"  \"+handle);\nwindow.alert(\"We have double clicked entity with AutoCAD Handle: \"+handle+\"\\r\\nThe svg id is: \"+id);\n}\n\nfunction cvjs_mouseout(id, handle, entity){\n\n  console.log(\"mysql mouseout \"+id+\"  \"+handle);\n  \n  if (current_selected_handle == handle){\n      // do nothing\n  }\n  else{\n      cadviewer.cvjs_mouseout_handleObjectStyles(id, handle);\n  }\n}\n\nfunction cvjs_mouseover(id, handle, entity){\n\nconsole.log(\"mysql mouseover \"+id+\"  \"+handle); // +\"  \"+jQuery(\"#\"+id).css(\"color\"))\n//cvjs_mouseover_handleObjectPopUp(id, handle);\t\n}\n\nfunction cvjs_mouseleave(id, handle, entity){\n\nconsole.log(\"mysql mouseleave \"+id+\"  \"+handle); // +\"  \"+jQuery(\"#\"+id).css(\"color\"));\n}\n\n\nfunction cvjs_mouseenter(id, handle, entity){\n//\tcvjs_mouseenter_handleObjectStyles(\"#a0a000\", 4.0, 1.0, id, handle);\n//\tcvjs_mouseenter_handleObjectStyles(\"#ffcccb\", 5.0, 0.7, true, id, handle);\n\n\n    cadviewer.cvjs_mouseenter_handleObjectStyles(\"#F00\", 2.0, 1.0, true, id, handle);\n\n}\n\n// END OF MOUSE OPERATION\n\nfunction cvjs_graphicalObjectCreated(graphicalObject){\n// do something with the graphics object created!\n//\t\twindow.alert(graphicalObject);\n\n}\n\nfunction cvjs_ObjectSelected(rmid){\n\t// placeholder for method in tms_cadviewerjs_modal_1_0_14.js   - must be removed when in creation mode and using creation modal\n}\n\nfunction cvjs_measurementCallback(){\n}\nfunction cvjs_CalibrateMeasurementCallback(){\n}\nfunction cvjs_Url_callback(){\n}\nfunction cvjs_loadSpaceImage_UserConfiguration(){\n}\nfunction cvjs_NoObjectSelected(){\n}\nfunction cvjs_SVGfileObjectClicked(){\n}\nfunction cvjs_SVGfileObjectMouseEnter(){\n}\nfunction cvjs_SVGfileObjectMouseLeave(){\n}\nfunction cvjs_SVGfileObjectMouseMove(){\n};\nfunction cvjs_ParseDisplayDataMaps(){\n};\nfunction cvjs_QuickCountCallback(){\n};\nfunction cvjs_OnHyperlinkClick(){\n};\nfunction cvjs_setUpStickyNotesRedlines(){\n};\nfunction custom_host_parser_PopUpMenu(){\n};\nfunction cvjs_customHostParser(){\n}\nfunction drawPathsGeneric(){\n};\nfunction cvjs_callbackForModalDisplay(){\n};\nfunction cvjs_populateMyCustomPopUpBody(){\n};\nfunction cvjs_customModalPopUpBody(){\n};\nfunction cvjs_NoObjectSelectedStickyNotes(){\n};\nfunction cvjs_NoObjectSelectedHyperlinks(){\n};\nfunction cvjs_ObjectSelectedHyperlink(){\n};\nfunction cvjs_ObjectSelectedStickyNotes(){\n};\n\n\nexport default {\n\n  created: function (){\n    \n    eventBus.$on('clearTextLayer', () => {\n              \n              this.clearTextLayer();\n      });\n    \n\n    eventBus.$on('AddTextOnSpaceObject_wrapper', (Id, leftScale, textStringArr, textStyleArr, scaleTextArr, hexColorTextArr, clipping, centering) => {\n\t\t\t  //window.alert(this.textLayer1+\" \"+textLayer1)\n              // we add text on space object based on the textLayer1 layer defined in this component \n\t\t\t  cadviewer.cvjs_AddTextOnSpaceObject(textLayer1, Id, leftScale, textStringArr, textStyleArr, scaleTextArr, hexColorTextArr, clipping, centering)\n\t })\n\n   \t  console.log('created CADViewerCanvas');\n\n  },\n  props: {\n    msg: String,\n    ServerBackEndUrl: String,\n    ServerLocation: String,\n    ServerUrl: String,\n    FileName: String,\n  },\n\n  mounted: function (){\n    // Register an event listener when the Vue component is ready\n    window.addEventListener('resize', this.onResize)\n\n    console.log('mounted');\n\n\t\tvar ServerBackEndUrl = this.ServerBackEndUrl;\n\t\tvar ServerLocation = this.ServerLocation;\n\t\tvar ServerUrl = this.ServerUrl;\n\t\tvar FileName = this.FileName;\n\n\t\t// Set all paths, and handlers, changes these depending on back-end server\n\t\tcadviewer.cvjs_debugMode(true);\n\t\t\n\t\tcadviewer.cvjs_setIconImageSize(\"floorPlan\",34, 44);\n\t\t\n\t\t// Set all paths, and handlers, changes these depending on back-end server\n\t\tcadviewer.cvjs_setAllServerPaths_and_Handlers(ServerBackEndUrl, ServerUrl, ServerLocation, \"PHP\", \"ReactJS\", \"floorPlan\");\n\t\t\n        //      Setting all callback methods  - they have to be injected into the CADViewer class componnet\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_OnLoadEnd\", cvjs_OnLoadEnd);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_graphicalObjectOnChange\", cvjs_graphicalObjectOnChange);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_OnLoadEndRedlines\", cvjs_OnLoadEndRedlines);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_ObjectSelected\", cvjs_ObjectSelected);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_measurementCallback\", cvjs_measurementCallback);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_CalibrateMeasurementCallback\", cvjs_CalibrateMeasurementCallback);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_Url_callback\", cvjs_Url_callback);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_loadSpaceImage_UserConfiguration\", cvjs_loadSpaceImage_UserConfiguration);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_NoObjectSelected\", cvjs_NoObjectSelected);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_SVGfileObjectClicked\", cvjs_SVGfileObjectClicked);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_SVGfileObjectMouseEnter\", cvjs_SVGfileObjectMouseEnter);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_SVGfileObjectMouseLeave\", cvjs_SVGfileObjectMouseLeave);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_SVGfileObjectMouseMove\", cvjs_SVGfileObjectMouseMove);\n\t\tcadviewer.cvjs_setCallbackMethod(\"cvjs_ParseDisplayDataMaps\", cvjs_ParseDisplayDataMaps);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_QuickCountCallback\", cvjs_QuickCountCallback);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_OnHyperlinkClick\", cvjs_OnHyperlinkClick);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_setUpStickyNotesRedlines\", cvjs_setUpStickyNotesRedlines);\n        cadviewer.cvjs_setCallbackMethod(\"custom_host_parser_PopUpMenu\", custom_host_parser_PopUpMenu);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_customHostParser\", cvjs_customHostParser);\n        cadviewer.cvjs_setCallbackMethod(\"drawPathsGeneric\", drawPathsGeneric );\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_callbackForModalDisplay\", cvjs_callbackForModalDisplay);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_populateMyCustomPopUpBody\", cvjs_populateMyCustomPopUpBody);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_customModalPopUpBody\", cvjs_customModalPopUpBody);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_NoObjectSelectedStickyNotes\", cvjs_NoObjectSelectedStickyNotes);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_NoObjectSelectedHyperlinks\", cvjs_NoObjectSelectedHyperlinks);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_ObjectSelectedHyperlink\", cvjs_ObjectSelectedHyperlink);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_ObjectSelectedStickyNotes\", cvjs_ObjectSelectedStickyNotes);\n\t\tcadviewer.cvjs_setCallbackMethod(\"cvjs_saveStickyNotesRedlinesUser\", cvjs_saveStickyNotesRedlinesUser);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_loadStickyNotesRedlinesUser\", cvjs_loadStickyNotesRedlinesUser);\n        cadviewer.cvjs_setCallbackMethod(\"my_own_clickmenu1\", my_own_clickmenu1);\n        cadviewer.cvjs_setCallbackMethod(\"my_own_clickmenu2\", my_own_clickmenu2);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_popupTitleClick\", cvjs_popupTitleClick);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_mousedown\", cvjs_mousedown);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_click\", cvjs_click);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_dblclick\", cvjs_dblclick);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_mouseout\", cvjs_mouseout);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_mouseover\", cvjs_mouseover);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_mouseleave\", cvjs_mouseleave);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_mouseenter\", cvjs_mouseenter);\n        cadviewer.cvjs_setCallbackMethod(\"cvjs_graphicalObjectCreated\", cvjs_graphicalObjectCreated);\n\n\t\t// END set all callback methods\n\n\t\t  // Location of installation folders\n\t\t  // NOTE: THE LOCATION OF THE ServerLocation/ServerUrl VARIABLES ARE DEFINED IN /cadviewer/app/cv/XXXHandlerSettings.js\t\n\t\t  //\tvar ServerLocation = \n\t\t  //\tvar ServerUrl =    \n\t\t cadviewer.cvjs_CADViewerPro(true);\n\t\t \n\t\t // Pass over the location of the installation, will update the internal paths\n\t\t cadviewer.cvjs_PrintToPDFWindowRelativeSize(0.8);\n\t\t cadviewer.cvjs_setFileModalEditMode(false);\n\t   \t\t   \n\t\t// For \"Merge DWG\" / \"Merge PDF\" commands, set up the email server to send merged DWG files or merged PDF files with redlines/interactive highlight.\n\t\t// See php / xampp documentation on how to prepare your server\n\t\tcadviewer.cvjs_emailSettings_PDF_publish(\"From CAD Server\", \"my_from_address@mydomain.com\", \"my_cc_address@mydomain.com\", \"my_reply_to@mydomain.com\");\n\t\t   \t \n\t\t// CHANGE LANGUAGE - DEFAULT IS ENGLISH\t\n\t\tcadviewer.cvjs_loadCADViewerLanguage(\"French\", \"\"); //English\n\t\t// Available languages:  \"English\" ; \"French, \"Korean\", \"Spanish\", \"Portuguese\", \"Chinese-Simplified\", \"Chinese-Traditional\"\n\t\t//cadviewer.cvjs_loadCADViewerLanguage(\"English\", \"/cadviewer/app/cv/cv-pro/custom_language_table/custom_cadviewerProLanguage.xml\");\n\n\n\n\n\t\t cadviewer.cvjs_DisplayCoordinatesMenu(\"floorPlan\",true);\n\n\t\t// 6.9.18\n\t\t// set SpaceObjectsCustomMenu location and json config file,  flag true to display SpaceObject Menu, false to hide\n\t\tcadviewer.cvjs_setSpaceObjectsCustomMenu( \"/content/customInsertSpaceObjectMenu/\", \"cadviewercustomspacecommands.json\", true);\n\n\n\n\t\t// Set Icon Menu Interface controls. Users can: \n\t\t// 1: Disable all icon interfaces\n\t\t//  cvjs_displayAllInterfaceControls(false, \"floorPlan\");  // disable all icons for user control of interface\n\n\t\t// 2: Disable either top menu icon menus or navigation menu, or both\n\n\t\t//cvjs_displayTopMenuIconBar(false, \"floorPlan\");  // disable top menu icon bar\n\t\t//cvjs_displayTopNavigationBar(false, \"floorPlan\");  // disable top navigation bar\n\n\t\t// 3: Users can change the number of top menu icon pages and the content of pages, based on a configuration file in folder /cadviewer/app/js/menu_config/    \t\t\n\t\tcadviewer.cvjs_setTopMenuXML(\"floorPlan\", \"cadviewer_full_commands_01.xml\", \"\");  \n\t\t//cadviewer.cvjs_setTopMenuXML(\"floorPlan\", \"cadviewer_full_commands_01.xml\", \"/cadviewer/app/cv/cv-pro/menu_config/\");\n\t\t//cadviewer.cvjs_setTopMenuXML(\"floorPlan\", \"cadviewer_menu_all_items_custom_commands.xml\", \"cadviewer/app/cv/cv-pro/menu_config/\");\n\n\t\t\n\t\t// Initialize CADViewer  - needs the div name on the svg element on page that contains CADViewerJS and the location of the\n\t\t// main application \"app\" folder. It can be either absolute or relative\n\t\t\t\t\n\t\t// SETTINGS OF THE COLORS OF SPACES\n\t\tvar cvjsRoomPolygonBaseAttributes = {\n\t\t\t\tfill: '#d8e1e3', //'#d8e1e3', // '#ffd7f4', //'#D3D3D3',   // #FFF   #ffd7f4\n\t\t\t\t\"fill-opacity\": 0.04,    //\"0.05\",   // 0.1\n\t\t\t\tstroke: '#CCC',  \n\t\t\t\t'stroke-width': 0.25,\n\t\t\t\t'stroke-linejoin': 'round',\n\t\t\t};\n\t\t\n\t\tvar cvjsRoomPolygonHighlightAttributes = {\n\t\t\t\tfill: '#a4d7f4',\n\t\t\t\t\"fill-opacity\": \"0.5\",\n\t\t\t\tstroke: '#a4d7f4',\n\t\t\t\t'stroke-width': 0.75\n\t\t\t};\n\t\t\t\n\t\tvar cvjsRoomPolygonSelectAttributes = {\n\t\t\t\tfill: '#5BBEF6',\n\t\t\t\t\"fill-opacity\": \"0.5\",\n\t\t\t\tstroke: '#5BBEF6',\n\t\t\t\t'stroke-width': 0.75\n\t\t\t};\n\t\n\t\t/** FIXED POP-UP MODAL  **/\n\t\t\n\t\t\t// THIS IS THE DESIGN OF THE pop-up MODAL WHEN CLICKING ON SPACES\n\t\t// KEEP METHODS NAME AS IS FOR NOW...............\n\n\t\tvar my_cvjsPopUpBody = \"<div class=\\'cvjs_modal_1\\' id=\\'my_own_clickmenu1()\\'>Custom<br>Menu 1<br><i class=\\'fa fa-undo\\'></i></div>\";\n\t\tmy_cvjsPopUpBody += \"<div class=\\'cvjs_modal_1\\' id=\\'my_own_clickmenu2()\\'>Custom<br>Menu 2<br><i class=\\'fa fa-info-circle\\'></i></div>\";\n\t\tmy_cvjsPopUpBody += \"<div class=\\'cvjs_modal_1\\' id=\\'cvjs_zoomHere()\\'>Zoom<br>Here<br><i class=\\'fa fa-search-plus\\'></i></div>\";\n\t\t\t\n\n\t\t\t// Initialize CADViewer - needs the div name on the svg element on page that contains CADViewerJS and the location of the\n\t\t\t// And we intialize with the Space Object Custom values\n\t\t//  cvjs_InitCADViewer_highLight_popUp_app(\"floorPlan\", ServerUrl+\"app/\", cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes, my_cvjsPopUpBody);\n\n\t\t//      cvjs_InitCADViewer_highLight_popUp_app(\"floorPlan\", ServerUrl+ \"/cadviewer/app/\", cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes, my_cvjsPopUpBody );\n\t\tcadviewer.cvjs_InitCADViewer_highLight_popUp_app(\"floorPlan\", \"/cadviewer/app/\", cvjsRoomPolygonBaseAttributes, cvjsRoomPolygonHighlightAttributes, cvjsRoomPolygonSelectAttributes, my_cvjsPopUpBody );\n\t\t\t\t\n\t\t// set the location to license key, typically the js folder in main app application folder ../app/cv/\n\t\t//cadviewer.cvjs_setLicenseKeyPath(\"/cadviewer/app/cv/\");\n\t\t// alternatively, set the key directly, by pasting in the cvKey portion of the cvlicense.js file, note the JSON \\\" around all entities \t \n\t\tcadviewer.cvjs_setLicenseKeyDirect('{ \\\"cvKey\\\": \\\"00110010 00110010 00110000 00110001 00110010 00110000 00110100 00110001 00110100 00111000 00110001 00110100 00110101 00110001 00110101 00110111 00110001 00110101 00111001 00110001 00110100 00111000 00110001 00110101 00110010 00110001 00110100 00110101 00110001 00110100 00110001 00110001 00110100 00110000 00110001 00111001 00110111 00110010 00110000 00110111 00110010 00110000 00110110 00110010 00110000 00110001 00110010 00110001 00110000 00110010 00110000 00111000 00110010 00110001 00110000 00110010 00110000 00111000 00110010 00110001 00110000 00110010 00110000 00110111 00110001 00111001 00111000 00110010 00110000 00110110 00110010 00110000 00111000 00110010 00110000 00110110 00110010 00110000 00110101 00110010 00110001 00110001 00110010 00110000 00111000 00110010 00110000 00110111 00110010 00110001 00110001 00110010 00110000 00110101 00110010 00110000 00110111 00110001 00111001 00111000 00110001 00110100 00110001 00110001 00110100 00110100 00110001 00110101 00111001 00110001 00110101 00110111 00110001 00110101 00110101 \\\" }');\t\t \n\t\t\t\n\t\t// Sets the icon interface for viewing, layerhanding, measurement, etc. only\n\t\t//cvjs_setIconInterfaceControls_ViewingOnly();\n\t\t// disable canvas interface.  For developers building their own interface\n\t\t// cvjs_setIconInterfaceControls_DisableIcons(true);\n\n\t\tcadviewer.cvjs_allowFileLoadToServer(true);\n\t\t\n\t\t//\t\tcvjs_setUrl_singleDoubleClick(1);\n\t\t//\t\tcvjs_encapsulateUrl_callback(true);\n\t\t\n\t\t// NOTE BELOW: THESE SETTINGS ARE FOR SERVER CONTROLS FOR UPLOAD OF REDLINES\n\n\t\t// NOTE BELOW: THESE SETTINGS ARE FOR SERVER CONTROLS FOR UPLOAD OF REDLINES, FILES, SPACE OBJECTS\n\t\tcadviewer.cvjs_setServerFileLocation_AbsolutePaths(ServerLocation+'/content/drawings/dwg/', ServerBackEndUrl+'content/drawings/dwg/',\"\",\"\");\n\t\tcadviewer.cvjs_setRedlinesAbsolutePath(ServerBackEndUrl+'/content/redlines/fileloader_610/', ServerLocation+'/content/redlines/fileloader_610/');\n\t\tcadviewer.cvjs_setSpaceObjectsAbsolutePath(ServerBackEndUrl+'/content/spaceObjects/', ServerLocation+'/content/spaceObjects/');\n\t\tcadviewer.cvjs_setInsertImageObjectsAbsolutePath(ServerBackEndUrl+'/content/inserted_image_objects/', ServerLocation+'/content/inserted_image_objects/')\n\n\t\t\t\n\t\tcadviewer.cvjs_conversion_clearAXconversionParameters();\n\n\t\t// process layers for spaces  RL/TL\n\t\tcadviewer.cvjs_conversion_addAXconversionParameter(\"RL\", \"RM_\");\t\t \n\t\tcadviewer.cvjs_conversion_addAXconversionParameter(\"TL\", \"RM_TXT\");\t\t \n\t\t// calculate areas of spaces\n\t\tcadviewer.cvjs_conversion_addAXconversionParameter(\"LA\", \"\");\t\t \n\t\tcadviewer.cvjs_conversion_addAXconversionParameter(\"last\", \"\");\t\t \t\t\t\t\t\t\t\n\t\t// NOTE ABOVE: THESE SETTINGS ARE FOR SERVER CONTROLS FOR CONVERTING DWG, DXF, DWF files\n\n\n\t\t// FOR MEASUREMENT ENABLE HANDLE PROCESSING\n\t    cadviewer.cvjs_conversion_addAXconversionParameter(\"hlall\", \"\");\t\t \t\t\t\t\t\t\t\n\n\n\n\t\t// Load file - needs the svg div name and name and path of file to load\n\t\tcadviewer.cvjs_LoadDrawing(\"floorPlan\", FileName );\n\n\t\t// set maximum CADViewer canvas side\n\t\tcadviewer.cvjs_resizeWindow_position(\"floorPlan\" );\n\n\t\t// alternatively set a fixed CADViewer canvas size\n\t\t//\tcvjs_resizeWindow_fixedSize(600, 400, \"floorPlan\");\t\t\t   \n  },\n\n  name: 'CADViewer01',\n  methods: {\n    onResize(e) {\n        console.log(\"RESIZE\");\n        //  cadviewer resize event \n        cadviewer.cvjs_resizeWindow_position(\"floorPlan\" );\n    },\n\n\tclearTextLayer(){\n\t\ttextLayer1 = cadviewer.cvjs_clearLayer(textLayer1);\n\t}\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n#floorPlan {\n\ttext-align: left;\n\tmargin-top: 30px;\n  \tmargin-left: 2px;   /* margin-left: 50px;   */\n} \n \n\n</style>\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('app-cadviewercanvas',{ref:\"cadviewercanvas\",attrs:{\"ServerBackEndUrl\":_vm.ServerBackEndUrl,\"ServerLocation\":_vm.ServerLocation,\"ServerUrl\":_vm.ServerUrl,\"FileName\":_vm.FileName}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"cadviewerCanvasTest01\"},[_c('div',{attrs:{\"id\":\"floorPlan\"}})])\n}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CADViewerCanvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CADViewerCanvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CADViewerCanvas.vue?vue&type=template&id=8dbecce2&scoped=true&\"\nimport script from \"./CADViewerCanvas.vue?vue&type=script&lang=js&\"\nexport * from \"./CADViewerCanvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CADViewerCanvas.vue?vue&type=style&index=0&id=8dbecce2&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8dbecce2\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\" width=\"40px\"> -->\n    <!-- <app-cadviewerhelpermethods ref=\"cadviewerhelpermethods\"></app-cadviewerhelpermethods> -->\n    <!--<app-cadviewerspaceobjects ref=\"cadviewerspaceobjects\"></app-cadviewerspaceobjects> -->\n    <app-cadviewercanvas \n      ref=\"cadviewercanvas\" \n      :ServerBackEndUrl=\"ServerBackEndUrl\" \n      :ServerLocation=\"ServerLocation\"\n      :ServerUrl=\"ServerUrl\"\n      :FileName=\"FileName\"\n    ></app-cadviewercanvas>\n\n    \n  </div>\n</template>\n\n\n<script>\n\n// NOTE:  IF YOU IN INDEX.HTML ADD IN CADVIEWER CLASS DECLARATIONS FROM /PUBLIC/CADVIEWER_TOPLEVEL_VUE/APP/.. then the components _no_npm can be used.\n\n// Standard use\nimport CADViewerCanvas from './components/CADViewerCanvas.vue'    // STANDARD NPM INSTALL\n// import CADViewerHelperMethods from './components/CADViewerHelperMethods.vue' // STANDARD NPM INSTALL\n//import CADViewerSpaceObjects from './components/CADViewerSpaceObjects.vue' // STANDARD NPM INSTALL\n\n\n// Altenative use, see index.html for import of CADViewer and jQuery\n/*\nimport CADViewerCanvas from './components/CADViewerCanvas_no_npm.vue'   // NO NPM INSTAL - GLOBAL use cadviewer_toplevel_vue - not recommended\nimport CADViewerHelperMethods from './components/CADViewerHelperMethods_no_npm.vue' // NO NPM INSTAL - GLOBAL use cadviewer_toplevel_vue - not recommended\nimport CADViewerSpaceObjects from './components/CADViewerSpaceObjects_no_npm.vue' // NO NPM INSTAL - GLOBAL use cadviewer_toplevel_vue - not recommended\n*/\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      ServerBackEndUrl: Object.fromEntries(new URLSearchParams(window.location.search).entries()).ServerBackEndUrl,\n      ServerLocation: Object.fromEntries(new URLSearchParams(window.location.search).entries()).ServerLocation,\n      ServerUrl: Object.fromEntries(new URLSearchParams(window.location.search).entries()).ServerUrl,\n      FileName: Object.fromEntries(new URLSearchParams(window.location.search).entries()).FileName\n    }\n  },\n  components: {\n    // 'app-cadviewerhelpermethods' : CADViewerHelperMethods,\n/*    'app-cadviewerspaceobjects' : CADViewerSpaceObjects, */\n    'app-cadviewercanvas': CADViewerCanvas,\n  }\n}\n</script>\n\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 10px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2fbcb967&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=2fbcb967&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\n/*\nimport CADViewerCanvas from './CADViewerCanvasPlaceholder.vue'\nimport CADViewerHelperMethods from './CADViewerHelperMethodsPlaceholder.vue'\nimport CADViewerSpaceObjects from './CADViewerSpaceObjectsPlaceholder.vue'\n*/\n/*\n// main import of CADViewer\nimport cadviewer from 'cadviewer';\nObject.defineProperty(Vue.prototype, '$cadviewer', { value: cadviewer });\n\nimport jquery from 'jquery';\nObject.defineProperty(Vue.prototype, '$jquery', { value: jquery });\n\n*/\n\n// import resize of components\n//import resize from \"vue-element-resize-detector\";\n//Vue.use(resize)\n\nVue.config.productionTip = false\n\nexport const eventBus = new Vue(); // added to trigger inter components call of methods\n\n\nvar app = new Vue({\n  render: h => h(App),\n}).$mount('#app')\n\n\n\n\n/*\n\nwindow.App = app\n\n\n\nvar helpermethods = new Vue({\n  render: h => h(CADViewerHelperMethods),\n}).$mount('#cadviewerhelpermethods')\n\nwindow.HelperMethods = helpermethods;\n\nvar spaceobjects = new Vue({\n  render: h => h(CADViewerSpaceObjects),\n}).$mount('#cadviewerspaceobjects')\n\nwindow.SpaceObjects = spaceobjects\n\nvar cadviewercanvas = new Vue({\n  render: h => h(CADViewerCanvas),\n}).$mount('#cadviewercanvas')\n\nwindow.CADViewer = cadviewercanvas\n*/\n\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CADViewerCanvas.vue?vue&type=style&index=0&id=8dbecce2&prod&scoped=true&lang=css&\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=2fbcb967&prod&lang=css&\""],"sourceRoot":""}